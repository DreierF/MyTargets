/*
 * Copyright (C) 2017 Florian Dreier
 *
 * This file is part of MyTargets.
 *
 * MyTargets is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * MyTargets is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

crowdinUpload {
    apiKey = project.hasProperty('CROWDIN_API_KEY') ? CROWDIN_API_KEY : System.getenv('CROWDIN_API_KEY')
    projectId = 'mytargets'
    sourceFiles = [
            ['strings.xml', 'app/src/main/res/values/strings.xml'],
            ['strings-shared.xml', 'shared/src/main/res/values/strings.xml'],
            ['rounds.xml', 'shared/src/main/res/values/rounds.xml'],
            ['target_faces.xml', 'shared/src/main/res/values/target_faces.xml'],
            ['strings-wearable.xml', 'wearable/src/main/res/values/strings.xml']
    ]
}

crowdinDownload {
    doLast {
        new File('app/src/main/play/af-ZA').deleteDir()
        new File('app/src/main/play/ar-SA').deleteDir()
        new File('app/src/main/play/el-GR').deleteDir()
        new File('app/src/main/play/fi-FI').deleteDir()
        new File('app/src/main/play/he-IL').deleteDir()
        new File('app/src/main/play/id-ID').deleteDir()
        new File('app/src/main/play/ko-KR').deleteDir()
        new File('app/src/main/play/ro-RO').deleteDir()
        new File('app/src/main/play/sr-SP').deleteDir()
        new File('app/src/main/play/uk-UA').deleteDir()
        new File('app/src/main/play/vi-VN').deleteDir()
    }
    apiKey = project.hasProperty('CROWDIN_API_KEY') ? CROWDIN_API_KEY : System.getenv('CROWDIN_API_KEY')
    projectId = 'mytargets'
    destination = "$projectDir"
    renameMapping = [
            from: '^((?:(?!values).)*)(?:(values-)((?!(pt|zh))(.*)-r(.*)|((pt|zh).*)))?(/(?:(?!values).)*)$',
            to  : /\1\2\5\7\9/
    ]
}.dependsOn crowdinUpload

allprojects {
    def CROWDIN_API_KEY = project.hasProperty('CROWDIN_API_KEY') ? CROWDIN_API_KEY : System.getenv('CROWDIN_API_KEY')
    if (CROWDIN_API_KEY != null && !CROWDIN_API_KEY.isEmpty()) {
        tasks.whenTaskAdded { task ->
            if (task.name.matches('.*assemble.*Release')) {
                task.dependsOn crowdinDownload
            }
        }
    }
}
