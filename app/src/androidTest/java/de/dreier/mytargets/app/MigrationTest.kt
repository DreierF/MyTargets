/*
 * Copyright (C) 2018 Florian Dreier
 *
 * This file is part of MyTargets.
 *
 * MyTargets is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * MyTargets is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

package de.dreier.mytargets.app

import android.content.Context
import androidx.room.Room
import androidx.room.testing.MigrationTestHelper
import androidx.sqlite.db.SupportSQLiteDatabase
import androidx.test.ext.junit.runners.AndroidJUnit4
import androidx.test.filters.SmallTest
import androidx.test.platform.app.InstrumentationRegistry
import androidx.test.platform.app.InstrumentationRegistry.getInstrumentation
import com.google.common.truth.Truth.assertThat
import de.dreier.mytargets.base.db.AppDatabase
import de.dreier.mytargets.base.db.migrations.*
import de.dreier.mytargets.shared.models.Dimension
import de.dreier.mytargets.shared.models.Dimension.Unit.CENTIMETER
import de.dreier.mytargets.shared.models.Dimension.Unit.METER
import de.dreier.mytargets.shared.models.EWeather
import de.dreier.mytargets.shared.models.db.Round
import de.dreier.mytargets.shared.models.db.Training
import de.dreier.mytargets.test.base.InstrumentedTestBase
import org.junit.Before
import org.junit.Rule
import org.junit.Test
import org.junit.runner.RunWith
import java.io.IOException

@SmallTest
@RunWith(AndroidJUnit4::class)
class MigrationTest : InstrumentedTestBase() {

    companion object {
        private const val TEST_DB_NAME = "test_db"
    }

    @JvmField
    @Rule
    val testHelper = MigrationTestHelper(
        InstrumentationRegistry.getInstrumentation(),
        AppDatabase::class.java.canonicalName
    )

    @Before
    @Throws(IOException::class)
    fun setUp() {
        // Create artificial image file to ensure the according database entry is not deleted (Migration23)
        getInstrumentation().targetContext
            .openFileOutput(
                "img175420839671886584-0f61-43a6-bc1e-dbcd8526056c794370927.jpg",
                Context.MODE_PRIVATE
            )
            .close()
    }

    @Test
    fun upgradeShouldKeepData() {
        val db = testHelper.createDatabase(TEST_DB_NAME, 16)
        insertTrainingDataForVersion16(db)
        db.close()

        testHelper.runMigrationsAndValidate(
            TEST_DB_NAME, 26,
            true,
            Migration17, Migration18, Migration19,
            Migration20, Migration21, Migration22,
            Migration23, Migration24, Migration25,
            Migration26
        )

        val migratedDb = getMigratedRoomDatabase()
        val trainings = migratedDb.trainingDAO().loadTrainings()
        assertTraining1(migratedDb, trainings[0])
        assertTraining2(migratedDb, trainings[1])

        val bowDAO = migratedDb.bowDAO()
        val bows = bowDAO.loadBows()
        assertThat(bowDAO.loadBowImages(bows[0].id)[0].fileName)
            .isEqualTo("img175420839671886584-0f61-43a6-bc1e-dbcd8526056c794370927.jpg")
    }

    private fun insertTrainingDataForVersion16(db: SupportSQLiteDatabase) {
        db.execSQL("INSERT INTO `VISIER` (_id,bow,distance,setting,unit) VALUES (1,1,18,'18.5','m')")
        db.execSQL("INSERT INTO `VISIER` (_id,bow,distance,setting,unit) VALUES (2,1,50,'50.5','m')")
        db.execSQL("INSERT INTO `TRAINING` (_id,datum,title,weather,wind_speed,wind_direction,location,standard_round,bow,arrow,arrow_numbering,time) VALUES (1,1480633200000,'Training im Dez',0,3,0,'Neufahrn bei Freising',199,0,0,0,-1)")
        db.execSQL("INSERT INTO `TRAINING` (_id,datum,title,weather,wind_speed,wind_direction,location,standard_round,bow,arrow,arrow_numbering,time) VALUES (2,1481410800000,'Training',3,3,0,NULL,32,1,1,0,-1)")
        db.execSQL("INSERT INTO `STANDARD_ROUND_TEMPLATE` (_id,name,club,indoor) VALUES (199,'Ãœbung',512,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (1,1,3,-0.412068963050842,0.0344827584922314,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (2,1,2,-0.236206889152527,0.0245498139411211,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (3,1,1,-0.120689652860165,0.0275862067937851,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (4,1,0,0.00172413792461157,0.00172413792461157,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (5,2,-1,0.0258620698004961,1.1275862455368,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (6,2,6,0.0327586196362972,0.929310321807861,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (7,2,5,0.0501584820449352,0.771118402481079,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (8,2,4,0.0327586196362972,0.593103468418121,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (9,3,4,0.0,0.0,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (10,3,3,0.0,0.0,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (11,3,1,0.0,0.0,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (12,3,0,0.0,0.0,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (13,4,0,0.0206896550953388,0.012068965472281,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (14,4,2,0.00172413792461157,0.151724144816399,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (15,4,4,0.0103448275476694,0.362931042909622,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (16,5,-1,0.968965530395508,1.01896548271179,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (17,5,-1,0.953448295593262,-1.08965516090393,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (18,5,-1,-0.813793122768402,-1.15689659118652,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (19,6,1,-0.072413794696331,0.0586206912994385,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (20,6,1,-0.00517241377383471,-0.0741379335522652,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (21,6,2,0.136206895112991,-0.0706896558403969,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (22,6,3,0.277586221694946,-0.0431034490466118,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (23,6,4,0.123950511217117,-0.329122811555862,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (24,6,3,-0.0206896550953388,0.265517234802246,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (25,7,2,-0.144827589392662,0.00517241377383471,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (26,7,2,-0.113793104887009,0.0637931004166603,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (27,7,6,0.131034478545189,-0.565517246723175,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (28,7,7,0.0448275879025459,-0.658620715141296,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (29,7,2,-0.0775862038135529,-0.113793104887009,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (30,7,7,-0.0448275879025459,-0.65172415971756,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (31,8,2,0.0172413792461157,0.17758621275425,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (32,8,6,0.00689655169844627,-0.570689678192139,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (33,8,0,-0.0396551713347435,0.00862068962305784,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (34,8,7,-0.0603448264300823,-0.656896531581879,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (35,8,2,-0.106896549463272,0.0137931033968925,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (36,8,7,-0.079310342669487,-0.682758629322052,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (37,9,-1,0.782758593559265,1.23275864124298,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (38,9,5,0.0827586203813553,-0.496551722288132,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (39,9,1,-0.0827586203813553,0.024137930944562,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (40,9,5,0.0551724135875702,-0.474137932062149,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (41,9,2,-0.0620689652860165,0.0862068980932236,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (42,9,2,-0.0655172392725945,0.167241379618645,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (43,10,7,-0.155172407627106,-0.606896579265594,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (44,10,2,-0.106896549463272,0.0841121301054955,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (45,10,5,0.0551724135875702,-0.408620685338974,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (46,10,5,0.0344827584922314,-0.489655166864395,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (47,10,2,-0.0379310362040997,0.129310339689255,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (48,10,5,0.0810344815254211,-0.401724129915237,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (49,11,2,-0.0706896558403969,0.172413796186447,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (50,11,-1,0.853448271751404,1.17586207389832,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (51,11,4,0.136206895112991,-0.336206883192062,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (52,11,2,0.0,0.200000002980232,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (53,11,4,-0.0206896550953388,0.31379309296608,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (54,11,1,-0.0103448275476694,-0.098275862634182,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (55,12,0,-0.0103448275476694,0.00862068962305784,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (56,12,-1,0.994827568531036,1.10689651966095,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (57,12,2,0.0758620724081993,-0.172413796186447,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (58,12,3,0.0758620724081993,-0.281034469604492,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (59,12,3,0.072413794696331,-0.256896555423737,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (60,12,3,0.0706896558403969,-0.28448274731636,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (61,13,3,0.0586206912994385,-0.275862067937851,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (62,13,1,-0.0620689652860165,0.022413793951273,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (63,13,0,0.0155172413215041,-0.0413793101906776,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (64,13,1,0.0879310369491577,0.012068965472281,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (65,13,1,0.0879310369491577,0.0258620698004961,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (66,13,0,0.022413793951273,-0.00517241377383471,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (67,14,0,0.022413793951273,-0.00172413792461157,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (68,14,0,-0.0172413792461157,-0.0379310362040997,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (69,14,1,-0.0258620698004961,-0.0637931004166603,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (70,14,1,-0.00689655169844627,-0.0827586203813553,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (71,14,1,0.0258620698004961,-0.0517241396009922,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (72,14,1,0.0155172413215041,-0.0913793072104454,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (73,15,2,-0.0103448275476694,-0.108620688319206,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (74,15,2,0.0189655181020498,-0.122413791716099,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (75,15,2,0.00172413792461157,-0.134482756257057,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (76,15,2,-0.012068965472281,-0.112068966031075,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (77,15,1,-0.0413793101906776,-0.0741379335522652,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (78,15,3,-0.279310345649719,-0.0655172392725945,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (79,16,2,-0.0137931033968925,-0.146551728248596,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (80,16,3,-0.25862067937851,-0.151724144816399,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (81,16,4,-0.13965517282486,-0.291379302740097,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (82,16,2,-0.012068965472281,-0.196551725268364,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (83,16,1,-0.0155172413215041,-0.0620689652860165,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (84,16,2,0.117241382598877,0.0948275849223137,'',NULL,5)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (85,17,3,0.225862070918083,0.0293103456497192,'',NULL,0)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (86,17,6,-0.155172407627106,-0.568965494632721,'',NULL,1)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (87,17,3,0.246551722288132,-0.053448274731636,'',NULL,2)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (88,17,0,-0.0396551713347435,0.0155172413215041,'',NULL,3)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (89,17,3,-0.201738655567169,-0.0793248638510704,'',NULL,4)")
        db.execSQL("INSERT INTO `SHOOT` (_id,passe,points,x,y,comment,arrow,arrow_index) VALUES (90,17,2,-0.158620685338974,0.0689655169844627,'',NULL,5)")
        db.execSQL("INSERT INTO `ROUND_TEMPLATE` (_id,sid,r_index,distance,unit,passes,arrows,target,size,target_unit,scoring_style) VALUES (457,199,0,50,'m',3,4,1,40,'cm',1)")
        db.execSQL("INSERT INTO `ROUND_TEMPLATE` (_id,sid,r_index,distance,unit,passes,arrows,target,size,target_unit,scoring_style) VALUES (458,199,1,20,'m',2,3,0,60,'cm',0)")
        db.execSQL("INSERT INTO `ROUND` (_id,training,comment,template,target,scoring_style) VALUES (1,1,'',457,1,1)")
        db.execSQL("INSERT INTO `ROUND` (_id,training,comment,template,target,scoring_style) VALUES (2,1,'Kommentar',458,0,0)")
        db.execSQL("INSERT INTO `ROUND` (_id,training,comment,template,target,scoring_style) VALUES (3,2,'',49,0,0)")
        db.execSQL("INSERT INTO `ROUND` (_id,training,comment,template,target,scoring_style) VALUES (4,2,'',50,0,0)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (1,1,NULL,1,1481446121326)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (2,1,NULL,1,1481446162740)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (3,1,NULL,0,1481446187350)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (4,2,NULL,1,1481446353036)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (5,2,NULL,1,1481446372435)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (6,3,NULL,1,1481467230756)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (7,3,NULL,1,1481467234438)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (8,3,NULL,1,1481467237540)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (9,3,NULL,1,1481467241244)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (10,3,NULL,1,1481467242448)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (11,3,NULL,1,1481467248373)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (12,4,NULL,1,1481467262907)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (13,4,NULL,1,1481467264230)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (14,4,NULL,1,1481467265561)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (15,4,NULL,1,1481467266866)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (16,4,NULL,1,1481467268308)")
        db.execSQL("INSERT INTO `PASSE` (_id,round,image,exact,save_time) VALUES (17,4,NULL,1,1481467270994)")
        db.execSQL("INSERT INTO `BOW` (_id,name,brand,type,size,height,tiller,limbs,sight,draw_weight,stabilizer,clicker,description,thumbnail,image) VALUES (1,'Name','Brand',0,'Size','Brace height','Tiller','Limbs','Sight','30','Stabilizer','Clicker','Description',X'','img175420839671886584-0f61-43a6-bc1e-dbcd8526056c794370927.jpg')")
        db.execSQL("INSERT INTO `ARROW` (_id,name,length,material,spine,weight,tip_weight,vanes,nock,comment,thumbnail,image,diameter,diameter_unit) VALUES (1,'My arrow','','','','','','','','',X'',NULL,'5.0','mm')")
    }

    private fun getMigratedRoomDatabase(): AppDatabase {
        val database = Room.databaseBuilder(
            getInstrumentation().targetContext,
            AppDatabase::class.java, TEST_DB_NAME
        ).addMigrations(
            Migration17, Migration18, Migration19,
            Migration20, Migration21, Migration22,
            Migration23, Migration24, Migration25,
            Migration26
        ).build()
        testHelper.closeWhenFinished(database)
        return database
    }

    private fun assertTraining1(db: AppDatabase, training: Training) {
        assertThat(training.id).isEqualTo(1)
        assertThat(training.title).isEqualTo("Training im Dez")
        assertThat(training.standardRoundId).isEqualTo(null)
        assertThat(training.bowId).isEqualTo(null)
        assertThat(training.arrowId).isEqualTo(null)
        assertThat(training.arrowNumbering).isEqualTo(false)
        assertThat(training.environment.indoor).isEqualTo(true)
        assertThat(training.environment.weather).isEqualTo(EWeather.SUNNY)
        assertThat(training.environment.windDirection).isEqualTo(0)
        assertThat(training.environment.windSpeed).isEqualTo(3)
        assertThat(training.environment.location).isEqualTo("Neufahrn bei Freising")
        val rounds = db.roundDAO().loadRounds(training.id)

        assertRound11(db, rounds)

        assertThat(rounds[1].id).isEqualTo(2L)
        assertThat(rounds[1].trainingId).isEqualTo(1L)
        assertThat(rounds[1].index).isEqualTo(1)
        assertThat(rounds[1].shotsPerEnd).isEqualTo(3)
        assertThat(rounds[1].maxEndCount).isEqualTo(null)
        assertThat(rounds[1].distance).isEqualTo(Dimension(20f, METER))
        assertThat(rounds[1].comment).isEqualTo("Kommentar")
        assertThat(rounds[1].target.id).isEqualTo(0)
        assertThat(rounds[1].target.scoringStyleIndex).isEqualTo(0)
        assertThat(rounds[1].target.diameter).isEqualTo(Dimension(60f, CENTIMETER))
        assertThat(db.endDAO().loadEnds(rounds[1].id)).hasSize(2)
    }

    private fun assertRound11(db: AppDatabase, rounds: List<Round>) {
        val round1 = rounds[0]
        assertThat(round1.id).isEqualTo(1L)
        assertThat(round1.trainingId).isEqualTo(1L)
        assertThat(round1.index).isEqualTo(0)
        assertThat(round1.shotsPerEnd).isEqualTo(4)
        assertThat(round1.maxEndCount).isEqualTo(null)
        assertThat(round1.distance).isEqualTo(Dimension(50f, METER))
        assertThat(round1.comment).isEqualTo("")
        assertThat(round1.target.id).isEqualTo(1)
        assertThat(round1.target.scoringStyleIndex).isEqualTo(2)
        assertThat(round1.target.diameter).isEqualTo(Dimension(40f, CENTIMETER))
        val ends = db.endDAO().loadEnds(round1.id)
        assertThat(ends).hasSize(3)
        assertThat(ends[0].id).isEqualTo(1L)
        assertThat(ends[0].roundId).isEqualTo(1L)
        assertThat(ends[0].index).isEqualTo(0)
        assertThat(db.endDAO().loadEndImages(ends[0].id)).isEmpty()
        assertThat(ends[0].exact).isEqualTo(true)
        assertThat(ends[2].exact).isEqualTo(false)
        val shots = db.endDAO().loadShots(ends[0].id)
        assertThat(shots).hasSize(4)
        assertThat(shots[0].index).isEqualTo(0)
        assertThat(shots[0].x).isWithin(0f).of(-0.41206896f)
        assertThat(shots[0].y).isWithin(0f).of(0.03448276f)
        assertThat(shots[0].scoringRing).isEqualTo(3)
        assertThat(shots[0].arrowNumber).isEqualTo(null)
        assertThat(shots[1].index).isEqualTo(1)
        assertThat(shots[1].scoringRing).isEqualTo(2)
        assertThat(shots[2].index).isEqualTo(2)
        assertThat(shots[2].scoringRing).isEqualTo(1)
        assertThat(shots[3].index).isEqualTo(3)
        assertThat(shots[3].scoringRing).isEqualTo(0)
    }

    private fun assertTraining2(db: AppDatabase, training: Training) {
        assertThat(training.id).isEqualTo(2)
        assertThat(training.title).isEqualTo("Training")
        assertThat(training.standardRoundId).isEqualTo(32L)
        assertThat(training.bowId).isEqualTo(1)
        assertThat(training.arrowId).isEqualTo(1)
        assertThat(training.arrowNumbering).isEqualTo(false)
        assertThat(training.environment.indoor).isEqualTo(false)
        assertThat(training.environment.weather).isEqualTo(EWeather.LIGHT_RAIN)
        assertThat(training.environment.windDirection).isEqualTo(0)
        assertThat(training.environment.windSpeed).isEqualTo(3)
        assertThat(training.environment.location).isEqualTo("")
        val rounds = db.roundDAO().loadRounds(training.id)
        assertThat(db.endDAO().loadEnds(rounds[0].id)).hasSize(6)
        assertThat(db.endDAO().loadEnds(rounds[1].id)).hasSize(6)
    }


    private fun insertTrainingDataForVersion26(db: SupportSQLiteDatabase) {
        db.execSQL("INSERT INTO `Training` (id,title,date,standardRoundId,bowId,arrowId,arrowNumbering,comment,archerSignatureId,witnessSignatureId,indoor,weather,windSpeed,windDirection,location,reachedPoints,totalPoints,shotCount) VALUES (1,'Training','2019-08-27',11,NULL,NULL,0,'',NULL,NULL,0,0,0,0,'',178,300,30);")
        db.execSQL("INSERT INTO `StandardRound` (id,club,name) VALUES (11,4,'Bray I');")
        db.execSQL("INSERT INTO `StandardRound` (id,club,name) VALUES (12,4,'Bray II');")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (1,0,1,0.0909451246261597,0.140448212623596,2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (2,1,1,0.158708214759827,-0.0522582530975342,2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (3,2,1,-0.130176305770874,0.0333890914916992,2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (4,3,1,-0.00534975528717041,-0.170023441314697,2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (5,4,1,0.155141711235046,0.0512322187423706,2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (6,5,1,-0.0802456140518188,0.176134705543518,2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (7,0,2,0.169407725334167,0.21182119846344,3,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (8,1,2,-0.0445809364318848,0.254644751548767,3,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (9,2,2,-0.287101149559021,0.101193308830261,3,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (10,3,2,-0.172973990440369,-0.155748844146729,3,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (11,4,2,0.183673501014709,-0.380573153495789,5,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (12,5,2,0.408361554145813,-0.0593955516815186,-2,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (13,0,3,0.536754488945007,0.354566693305969,7,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (14,1,3,0.394095540046692,0.536567568778992,7,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (15,2,3,-0.226471185684204,0.679313063621521,8,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (16,3,3,-0.825638949871063,-0.14147424697876,9,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (17,4,3,-0.415494322776794,-0.605397462844849,8,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (18,5,3,0.793540835380554,-0.209278464317322,9,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (19,0,4,0.668714046478271,0.918412089347839,-1,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (20,1,4,0.597384691238403,0.886294007301331,-1,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (21,2,4,0.725777745246887,0.750685811042786,-1,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (22,3,4,0.839905142784119,-0.887320160865784,-1,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (23,4,4,0.458292126655579,-1.00508534908295,-1,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (24,5,4,0.0445809364318848,-0.915869355201721,10,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (25,0,5,-0.0338814258575439,-0.0843760967254639,1,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (26,1,5,-0.0267485380172729,-0.00943446159362793,0,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (27,2,5,-0.00178313255310059,0.0101931095123291,0,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (28,3,5,-0.0160490274429321,-0.0377378463745117,0,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (29,4,5,0.0124826431274414,-0.0389565229415894,0,NULL);")
        db.execSQL("INSERT INTO `Shot` (id,`index`,endId,x,y,scoringRing,arrowNumber) VALUES (30,5,5,0.0392313003540039,0.00840866565704346,0,NULL);")

        db.execSQL("INSERT INTO `RoundTemplate` (id,standardRoundId,`index`,shotsPerEnd,endCount,distance,targetId,targetScoringStyleIndex,targetDiameter) VALUES (13,11,0,6,5,'20.0 yd',0,0,'40.0 cm');")
        db.execSQL("INSERT INTO `RoundTemplate` (id,standardRoundId,`index`,shotsPerEnd,endCount,distance,targetId,targetScoringStyleIndex,targetDiameter) VALUES (14,12,0,6,5,'25.0 yd',0,0,'60.0 cm');")

        db.execSQL("INSERT INTO `Round` (id,trainingId,`index`,shotsPerEnd,maxEndCount,distance,comment,targetId,targetScoringStyleIndex,targetDiameter,reachedPoints,totalPoints,shotCount) VALUES (1,1,0,6,5,'20.0 yd','',0,0,'40.0 cm',178,300,30);")

        db.execSQL("INSERT INTO `End` (id,`index`,roundId,exact,saveTime,comment,reachedPoints,totalPoints,shotCount) VALUES (1,0,1,1,'21:05:52.528','',54,60,6);")
        db.execSQL("INSERT INTO `End` (id,`index`,roundId,exact,saveTime,comment,reachedPoints,totalPoints,shotCount) VALUES (2,1,1,1,'21:06:02.347','',45,60,6);")
        db.execSQL("INSERT INTO `End` (id,`index`,roundId,exact,saveTime,comment,reachedPoints,totalPoints,shotCount) VALUES (3,2,1,1,'21:06:08.17','',18,60,6);")
        db.execSQL("INSERT INTO `End` (id,`index`,roundId,exact,saveTime,comment,reachedPoints,totalPoints,shotCount) VALUES (4,3,1,1,'21:06:15.663','',1,60,6);")
        db.execSQL("INSERT INTO `End` (id,`index`,roundId,exact,saveTime,comment,reachedPoints,totalPoints,shotCount) VALUES (5,4,1,1,'21:06:25.499','',60,60,6);")
    }

    @Test
    fun upgrade26to27() {
        val db = testHelper.createDatabase(TEST_DB_NAME, 26)
        insertTrainingDataForVersion26(db)

        val count = db.query("select * from StandardRound").count
        assertThat(count).isEqualTo(2)

        db.close()

        testHelper.runMigrationsAndValidate(
            TEST_DB_NAME, 27,
            true,
            Migration27
        )

        val migratedDb = getMigratedRoomDatabase()
        val ends = migratedDb.endDAO().loadEnds(1)
        assertThat(ends.size).isEqualTo(10)
        assertThat(migratedDb.endDAO().loadShots(15).get(1).x).isEqualTo(0.0124826431274414.toFloat())
    }
}
